- name: install maven
  ansible.builtin.dnf:
    name: maven
    state: present

- name: create system user
  ansible.builtin.user:
    name: roboshop
    state: present
    comment: "roboshop system user"
    home: /app
    system: 'yes' # Set to 'yes' to create a system user with no home directory or shell by default

- name: remove app directory
  ansible.builtin.file:
    path: /app
    state: absent


- name: create app directory
  ansible.builtin.file:
    path: /app
    state: directory
      


- name: Delete shipping file
  ansible.builtin.file:
    path: /tmp/shipping.zip
    state: absent
      

- name: download shipping file to tmp directory
  ansible.builtin.get_url:
    url: "https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip "
    dest: "/tmp/shipping.zip"

- name: extract shipping file to app direcory
  ansible.builtin.unarchive:
    src: /tmp/shipping.zip
    dest: /app
    remote_src: yes

- name: install dependencies
  ansible.builtin.command: mvn clean package
  args:
    chdir: /app

- name: rename shipping jar file
  ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar  
  args:
    chdir: /app
    
- name: copy shipping service
  ansible.builtin.copy:
    src: shipping.service
    dest: /etc/systemd/system/shipping.service


- name: install mysql client
  ansible.builtin.dnf:
    name: mysql
    state: present

- name: install mysql python libraries
  ansible.builtin.pip:
    name: "{{ item }}"
    state: present
    executable: pip3.9
  loop:
    - PyMySQL
    - cryptography
    
- name: load mysql schema
  community.mysql.mysql_db:
    state: import
    name: all
    login_host: mysql.sniggie.fun
    login_user: root
    login_password: RoboShop@1 
    target: "{{ item }}"
  loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql
    - /app/db/master-data.sql 


- name: Start and enable shipping service
  ansible.builtin.systemd_service:
    name: shipping
    state: restarted
    enabled: yes
    daemon_reload: yes
  